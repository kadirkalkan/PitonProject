// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PitonProject.Models.Managers;

namespace PitonProject.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200713005218_initialization")]
    partial class initialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PitonProject.Models.Entities.Log", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogTypeID")
                        .HasColumnType("int");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LogTypeID");

                    b.ToTable("LOG");
                });

            modelBuilder.Entity("PitonProject.Models.Entities.LogType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LogTypeText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LOG_TYPE");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            LogTypeText = "info"
                        },
                        new
                        {
                            ID = 2,
                            LogTypeText = "error"
                        });
                });

            modelBuilder.Entity("PitonProject.Models.Entities.TaskClass", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CreatedUserID");

                    b.HasIndex("TaskTypeID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("PitonProject.Models.Entities.TaskType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TaskTypeText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TASK_TYPE");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            TaskTypeText = "day"
                        },
                        new
                        {
                            ID = 2,
                            TaskTypeText = "week"
                        },
                        new
                        {
                            ID = 3,
                            TaskTypeText = "month"
                        });
                });

            modelBuilder.Entity("PitonProject.Models.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("USERS");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Password = "14010511822918165421189233818977238212231771031692001152527518416831111421807216924",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("PitonProject.Models.Entities.Log", b =>
                {
                    b.HasOne("PitonProject.Models.Entities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PitonProject.Models.Entities.TaskClass", b =>
                {
                    b.HasOne("PitonProject.Models.Entities.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserID");

                    b.HasOne("PitonProject.Models.Entities.TaskType", "TaskType")
                        .WithMany()
                        .HasForeignKey("TaskTypeID");
                });
#pragma warning restore 612, 618
        }
    }
}
